** global initialized data must go into rom (the sidata = start of initial data).
    -> in the reset vector the initialized data must be copied into ram into sdata



todo: -> rename signals from csr reg, remove _ff stuff from data_path, test all other exception cases, write the other functions (napot etc), remove unused signals from datapath
      -> write physical memory protection unit with pmpcfg registers that hold the memory region limits
        


.c-> .s
riscv64-unknown-elf-gcc -S -march=rv32i_zicsr -mabi=ilp32 -O2 -nostdlib -T ./Asm_Code/linker.ld ./Asm_Code/main.c -o ./Asm_Code/main.s

.s-> .o
riscv64-unknown-elf-as -march=rv32i_zicsr -mabi=ilp32 -o ./Asm_Code/startup.o ./Asm_Code/startup.s

.o-> .elf
riscv64-unknown-elf-gcc -march=rv32i_zicsr -mabi=ilp32 -nostdlib -T linker.ld startup.o -o startup.elf

.elf-> .bin
riscv64-unknown-elf-objcopy -O binary startup.elf startup.bin

.bin-> little endian hex
xxd -p -c 4 startup.bin > startup.hex

